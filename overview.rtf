{\rtf1\ansi
\deff0\uc1
{\fonttbl
{\f0\fnil\fcharset0\fprq1DejaVu Sans;}
}
{\*\generator Ted 2.23, Feb 4, 2013 (http://www.nllgg.nl/Ted);}
{\info
{\title overview}
{\author Mark Tranter}
{\doccomm Notes for programming resources.}
{\creatim\yr2013\mo6\dy9\hr21\min43\sec2}
{\revtim\yr2014\mo1\dy4\hr15\min6\sec38}
}
\paperw11908\paperh16848\margl720\margr720\margt720\margb720
\fet0\aftntj\aftnnrlc
\sectd
\saftnnar\pard\qc\plain\fs22\b Computer Science and Python\par
\par
\pard\plain\fs22\b Y7 series\par
\par
Lesson 1 \b0(last revised 20/11/13)\par
Brief introduction to Python.\par
Introduction to the editor and interpreter.\par
Mathematical Operators.\par
"Hello, World!"\par
Simple "for" loop.\par
Variables.\par
Input and printing.\par
First real program - multiplication tables.\par
\b Code: \par
\b0\tab tables1.py\par
\par
\b Lesson 2 \b0(last revised 20/11/13)\par
Printing with format().\par
Try and except.\par
The "while" loop.\par
Improving the times tables program.\par
Simple functions.\par
Using docstrings.\par
\b Code: \par
\b0\tab try.py\par
\tab tables2.py\par
\par
\b Lesson 3 \b0(last revised 20/11/13)\par
Using a template program.\par
Using "if".\par
The "Time Tables Test" program.\par
Lists & simple list comprehensions.\par
Introducing "random".\par
\b Code: \par
\b0\tab template.py\par
\tab tables_test.py\par
\par
\b Lesson 4 \b0(Last revised 27/11/13)\par
Students to download a sample program and introduce some errors into it.
\par
They then switch computers with their neighbour and try to fix the 
errors.\par
\b Code:\par
\tab\b0password.py\par
\par
\b Lesson 5 \b0(last revised 20/11/13)\par
Random Numbers and the Dice Game.\par
More on use of lists (indexing).\par
Some more list comprehensions\par
Students create a simple game (double-six).\par
Next game: "Drop Dead"\par
\b Code: \par
\tab\b0die_test.py\par
\tab drop_dead.py\par
\par
\b Lesson 6 \b0(las revised xx/xx/xx)\par
The turtle module.\par
Draw a square.\par
Draw polygons.\par
Draw circles & quarter circles.\par
Flower task.\par
Filling and the star task.\par
\pard\pagebb\plain\fs22\b Lesson 7 \b0(last revised 20/11/13\par
\pard\plain\fs22Caesar cipher.\par
Modulus.\par
Using join().\par
String methods.\par
\b Code: \par
\tab\b0caesar.py\par
\par
\b Lesson 8 \b0(last revised 20/11/13)\par
Bubble Sort\par
Insertion Sort\par
Testing to compare Insertion Sort and Bubble Bort\par
\b Code:\par
\b0\tab bubble.py\par
\tab insertion.py\par
\par
\b Lesson 9 \b0(last revised 20/11/13) \par
Simple GUIs.\par
-> Click Counter.\par
-> Magic 8-Ball.\par
\b Code: \par
\tab\b0clickCount.py\par
\tab eight_ball.py\par
\b\par
Lesson 10 \b0(last revised 10/11/13)\par
Simple pygame.\par
\b Code: \par
\tab\b0graphics1.py\par
\tab bounce.py\par
\tab bat_ball.py\par
\b\par
\par
\pard\pagebb\plain\fs22\b Y8 series\par
\pard\plain\fs22\b\par
Lesson 1 \b0(last revised 25/11/13)\par
Hangman\par
Writing and reading to a csv file.\par
\b Code:\par
\tab\b0hangman.py\par
\tab hangman2.py\par
\b\par
Lesson 2 \b0(last revised 20/11/13)\par
Recursive Algorithms\par
Factorial.\par
Fibonacci numbers\par
Square Root.\par
Task - cube roots.\par
\b Code:\par
\tab\b0sqrt.py\par
\tab fibtest.py\par
\b\par
Lesson 3 \b0(last revised 25/11/13)\par
\b NB\i. \b0\i0This lesson is perhaps on the short side.\par
Binary and Hex\par
Recursive algorithm to convert numbers from denary to other bases.\par
requires knowledge of binary and hex - Y8.\par
\b Code:\par
\tab\b0bin_func.py\par
\tab base_func.py\par
\par
\b Lesson 4 \b0(last revised 20/11/13)\par
Primes.\par
Sieve of Eratosthenes.\par
Slices.\par
Enumerate.\par
Twin Primes task answer: (999959, 999961)\par
\b Code: \par
\tab\b0sieve.py\par
\tab p_gen.py\par
\par
\b Lesson 5 \b0(last revised 20/11/13)\par
vigenere cipher\par
jigsaw cipher\par
\b Code:\par
\tab\b0vig.py\par
\tab jigsaw.py\par
\par
\b Lesson 6\par
\b0Playfair cipher\par
\b\par
Lesson 7\par
\b0mergesort\par
heapsort\par
quicksort\par
\b\par
Lesson 8 \b0(last revised 17/11/13)\par
nth term-inator\par
\b Code:\par
\b0\tab nthterminator.py\par
\par
\b Lesson 9 \b0(last revised 18/11/13)\par
Series program\par
\b Code:\par
\tab\b0series.py\par
\par
\b Lesson 10\par
\b0Conway's GOL - nb refactor to use dictionaries (maybe).\par
\b\par
\pard\qc\pagebb\plain\fs22\b Computer Science and Scratch\par
\pard\plain\fs22\par
\b Lesson 1 \b0(last revised 7/12/13)\par
Getting started.\par
Drawing a square.\par
Looping.\par
Sounds.\par
\par
\b Lesson 2 \b0(last revised 7/12/13)\par
Draw a circle.\par
Introduction to the idea of algorithms.\par
Getting input.\par
Variables.\par
Polygon program.\par
\b Code:\par
\tab\b0polygon.sb\par
\par
\b Lesson 3 \b0(last revised 8/12/13)\par
Flower drawing routine.\par
More on variables.\par
Broadcasting messages.\par
\b Code:\par
\b0\tab petal.sb\par
\tab flower.sb\par
\tab star.sb\par
\par
\par
\b Lesson 4 \b0(last revised 8/12/13)\par
Exponentiation.\par
Calculate Square Root.\par
\b Code:\par
\tab\b0sqrt.sb\par
\b\par
Lesson 5 \b0(last revised xx/xx/xx)\par
Making own stage backgrounds\par
Making own sprites.\par
Frogger.\par
\b Code:\par
\tab\b0frogger.sb\par
\b\par
Lesson 6 \b0(last revised 19/12/13)\par
Simple dice games.\par
"Lotto" helper\par
Drop Dead\par
\b Code:\par
\b0\tab dropdead.sb\par
\par
\b Lesson 7 \b0(last revised 29/12/13)\par
Sorting algorithms\par
Bubblesort\par
\b Code:\par
\b0\tab bubblesort.sb\par
\par
\b\par
Lesson 8 \b0(last revised 29/12/13)\par
Caesar Cipher.\par
\b Code:\par
\tab\b0caesar.sb\page
\b Lesson 9\b0  (last revised 4/12/13)\par
Calculate Pi (Leibnitz's method).\par
Sieve of Eratosthenes.\par
\b Code:\par
\b0\tab pi_leibnitz.sb\par
\tab sieve.sb\par
\b\par
Lesson 10 \b0(las revised /12/13)\par
Simon.\par
\b Code:\par
\tab\b0simon.sb\par
\par
}
